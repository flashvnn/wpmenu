<?php

/**
 * @file
 * WordPress wpmenu clone.
 */

/**
 * Implements hook_theme().
 */
function wpmenu_theme($existing, $type, $theme, $path) {
  $items['wpmenu_top'] = array(
    'render element' => 'element',
    'template' => 'wpmenu-top',
    'path' => backdrop_get_path('module', 'wpmenu') . '/templates',
  );
  $items['wpmenu_left'] = array(
    'render element' => 'element',
    'template' => 'wpmenu-left',
    'path' => backdrop_get_path('module', 'wpmenu') . '/templates',
  );

  return $items;
}

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
function wpmenu_preprocess_page(&$variables) {
  global $user;
  $current_path = current_path();
  $is_admin = path_is_admin($current_path);
//print_r($variables);exit();
  if ($user->uid > 0) {
    if ($is_admin) {
      $variables['classes'][] = 'wp-admin';
    }
    $variables['classes'][] = 'wp-core-ui no-js index-php auto-fold admin-bar branch-4-2 version-4-2-4 admin-color-fresh locale-en-us no-customize-support no-svg';
    $variables['html_attributes']['class'] = 'wp-toolbar';

    if ($is_admin) {
      $variables['page'] = '<div id="wpwrap">' . theme('wpmenu_left') . '<div id="wpcontent" class="layout-container">' . theme('wpmenu_top') . $variables['page'];
      $variables['page'] .= '</div></div>';
    }
    else {
      $variables['page'] = '<div id="wpwrap">' . theme('wpmenu_top') . $variables['page'];
      $variables['page'] .= '</div>';
    }
  }
}

/**
 * Prepares variables for administration toolbar templates.
 *
 * Default template: wpmenu-top.tpl.php.
 *
 * @param array $variables
 *   An associative array containing some basic variables for the twig template
 */
function template_preprocess_wpmenu_top(&$variables) {
  global $base_path, $user;
  $current_path = current_path();
  $is_admin = path_is_admin($current_path);
  $types = node_type_get_types();
  $content_types = array_keys($types);

  // Adds core search form with correct styling
  $search_form = backdrop_get_form('search_block_form');
  $search_form['#attributes']['id'][] = 'adminbarsearch';
  $search_form['search_block_form']['#attributes']['class'][] = 'adminbar-input';
  unset($search_form['actions']['submit']);
  $variables['form'] = backdrop_render($search_form);
  // End search form

  $variables['is_admin'] = $is_admin;
  $variables['site_name'] = config_get('system.core', 'site_name');
  $variables['base_path'] = $base_path;
  $variables['module_path'] = backdrop_get_path('module', 'wpmenu');
  $variables['current_path'] = $current_path;
  $variables['content_types'] = $content_types;
  $variables['username'] = $user->name;
  $variables['uid'] = $user->uid;
  $variables['gravatar'] = 'https://www.gravatar.com/avatar/' . strtolower(trim(md5($user->mail)));
}

/**
 * Prepares variables for administration toolbar templates.
 *
 * Default template: wpmenu-left.tpl.php.
 *
 * @param array $variables
 *   An associative array containing:
 *   - menu: An array containing the properties and children of
 *     the menu. Properties used: separator, path, text, icon, children.
 */
function template_preprocess_wpmenu_left(&$variables) {
  global $base_path;
  $current_path = current_path();

  $variables['base_path'] = $base_path;
  $variables['current_path'] = $current_path;

  $variables['menu'] = array(
    'menu' => array(
      'separator' => FALSE,
      'url' => 'admin',
      'text' => 'Dasboard',
      'icon' => 'dashboard',
      'children' => array(
        array(
          'url' => '/admin',
          'text' => 'Index'
        ),
        array(
          'url' => 'update.php',
          'text' => 'Update'
        )
      )
    ),
    array(
      'separator' => TRUE,
      'url' => 'admin/content',
      'text' => 'Content',
      'icon' => 'admin-page',
      'children' => array(
        array(
          'url' => '/admin/content/add',
          'text' => 'Add'
        )
      )
    ),
    array(
      'separator' => FALSE,
      'url' => 'admin/structure',
      'text' => 'Structure',
      'icon' => 'admin-structure',
      'children' => array(
        array(
          'url' => '/admin/structure/block',
          'text' => 'Blocks'
        ),
        array(
          'url' => '/admin/structure/types',
          'text' => 'Content Types'
        ),
        array(
          'url' => '/admin/structure/taxonomy',
          'text' => 'Taxonomy'
        )
      )
    ),
    array(
      'separator' => FALSE,
      'url' => 'admin/appearance',
      'text' => 'Appearance',
      'icon' => 'admin-appearance',
      'children' => array(
        array(
          'url' => '/admin/appearance/settings',
          'text' => 'Settings'
        )
      )
    ),
    array(
      'separator' => FALSE,
      'url' => 'admin/modules',
      'text' => 'Modules',
      'icon' => 'admin-plugins',
      'children' => array()
    ),
    array(
      'separator' => FALSE,
      'url' => 'admin/config',
      'text' => 'Configuration',
      'icon' => 'admin-settings',
      'children' => array(
        array(
          'url' => '/admin/config/development/performance',
          'text' => 'Performance'
        )
      )
    ),
    array(
      'separator' => FALSE,
      'url' => 'admin/people',
      'text' => 'People',
      'icon' => 'admin-users',
      'children' => array()
    ),
    array(
      'separator' => FALSE,
      'url' => 'admin/reports',
      'text' => 'Reports',
      'icon' => 'admin-reports',
      'children' => array()
    ),
    array(
      'separator' => FALSE,
      'url' => 'admin/help',
      'text' => 'Help',
      'icon' => 'admin-help',
      'children' => array()
    )
  );
}

/**
 * Implements hook_js_alter().
 */
function wpmenu_js_alter(&$js) {
  global $user;
  if ($user->uid > 0) {
    $js = backdrop_add_js('/libraries/wordpress/wp-admin/js/common.min.js');
    $js = backdrop_add_js('/libraries/wordpress/wp-includes/js/admin-bar.min.js');
    $js = backdrop_add_js('/libraries/wordpress/wp-includes/js/utils.min.js');
  }
}

/**
 * Implements hook_css_alter().
 */
function wpmenu_css_alter(&$css) {
  global $user;
  if ($user->uid > 0) {
    $css = backdrop_add_css('/libraries/wordpress/wp-includes/css/dashicons.min.css', array('type' => 'external', 'weight' => 0));
    $css = backdrop_add_css('/libraries/wordpress/wp-includes/css/admin-bar.min.css', array('type' => 'external', 'weight' => 0));
    $css = backdrop_add_css('/libraries/wordpress/wp-admin/css/wp-admin.min.css', array('type' => 'external', 'weight' => 0));
    $css = backdrop_add_css('/libraries/wordpress/wp-includes/css/buttons.min.css', array('type' => 'external', 'weight' => 0));
    $css = backdrop_add_css('/libraries/wordpress/wp-admin/css/common.css', array('type' => 'external', 'weight' => 0));
    $css = backdrop_add_css('/libraries/wordpress/wp-admin/css/forms.css', array('type' => 'external', 'weight' => 0));
    $css = backdrop_add_css('/libraries/wordpress/wp-admin/css/admin-menu.css', array('type' => 'external', 'weight' => 0));
  }
}
